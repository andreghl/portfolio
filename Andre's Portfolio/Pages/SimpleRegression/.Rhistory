cat("----------------------------------- \n")
cat(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
data <- c(intercept, slope)
results <- matrix(data = data ,
nrow = 2,
ncol = 2,
byrow = TRUE,
colnames = list("Estimate")
)
# Print Output to console
cat("Regression: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
data <- c(intercept, slope)
results <- matrix(data = data ,
nrow = 2,
ncol = 2,
byrow = TRUE,
colnames = "Estimate"
)
# Print Output to console
cat("Regression: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
data <- c(intercept, slope)
results <- matrix(data = data ,
nrow = 2,
ncol = 2,
byrow = TRUE
)
# Print Output to console
cat("Regression: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
# Test and compare output with lm()
test <- lm(y~x)
summary(test)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
data <- c(intercept, slope)
results <- matrix(data = data,
nrow = 2,
ncol = 1,
byrow = TRUE
)
# Print Output to console
cat("Regression: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
# Test and compare output with lm()
test <- lm(y~x)
summary(test)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
output <- c("Intercept", name(dataset[2]))
estimates <- c(intercept, slope)
results <- data.frame(output, estimates)
# Print Output to console
cat("Regression: \n")
cat("Method: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
name <- name(dataset[,2])
output <- c("Intercept", name)
estimates <- c(intercept, slope)
results <- data.frame(output, estimates)
# Print Output to console
cat("Regression: \n")
cat("Method: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
output <- c("Intercept", "Slope")
estimates <- c(intercept, slope)
results <- data.frame(output, estimates)
# Print Output to console
cat("Regression: \n")
cat("Method: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
output <- c("Intercept", "Slope")
estimates <- c(intercept, slope)
results <- c(output, estimates)
# Print Output to console
cat("Regression: \n")
cat("Method: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
# Test and compare output with lm()
test <- lm(y~x)
summary(test)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
output <- c("Intercept", "Slope")
estimates <- c(intercept, slope)
results <- c(output, "\n", estimates)
# Print Output to console
cat("Regression: \n")
cat("Method: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
# Test and compare output with lm()
test <- lm(y~x)
summary(test)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
output <- c("Intercept", "Slope")
estimates <- c(intercept, slope)
results <- data.frame(output, "\n", estimates)
# Print Output to console
cat("Regression: \n")
cat("Method: Ordinary Least Squares \n")
cat("----------------------------------- \n")
write.table(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
# Test and compare output with lm()
test <- lm(y~x)
summary(test)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
output <- c("Intercept", "Slope")
estimates <- c(intercept, slope)
results <- data.frame(output, estimates)
# Print Output to console
cat("Regression: \n")
cat("Method: Ordinary Least Squares \n")
cat("----------------------------------- \n")
write.table(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
# Test and compare output with lm()
test <- lm(y~x)
summary(test)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Print Output to console
cat("Regression: \n")
cat("Method: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat("         ", "Estimate",  "\n")
cat("Intercept:", intercept, "\n")
cat("Slope:", slope, "\n")
}
regress(y, x)
# Test and compare output with lm()
test <- lm(y~x)
summary(test)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Print Output to console
cat("Regression: \n")
cat("Method: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat("          ", "Estimate",  "\n")
cat("Intercept:", intercept, "\n")
cat("    Slope:", slope, "\n")
cat("___________________________________ \n")
}
regress(y, x)
# Test and compare output with lm()
test <- lm(y~x)
summary(test)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Print Output to console
cat("Regression: \n")
cat("Method: Ordinary Least Squares \n")
cat("___________________________________ \n")
cat("          ", "Estimate",  "\n")
cat("Intercept:", intercept, "\n")
cat("    Slope:", slope, "\n")
cat("----------------------------------- \n")
}
regress(y, x)
# Test and compare output with lm()
test <- lm(y~x)
summary(test)
setwd("~/Code/Portfolio/Portfolio/Andre's Portfolio/Pages/SimpleRegression")
rm(list = ls())
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
setwd("~/Code/Portfolio/Portfolio/Andre's Portfolio/Pages/SimpleRegression")
rm(list = ls())
# To hide output, include 'results = "hide"'
set.seed(2023)
# Sample Creation
x <- rnorm(n = 300, mean = 3, sd = 1)
y <- 2*x + rnorm(n = 300, mean = 1, sd = 2)
plot(x, y)
set.seed(2024)
# Sample Creation
x <- rnorm(n = 300, mean = 3, sd = 1)
y <- 2*x + rnorm(n = 300, mean = 1, sd = 2)
plot(x, y)
set.seed(2024)
# Sample Creation
x <- rnorm(n = 300, mean = 3, sd = 1)
y <- 2*x + rnorm(n = 300, mean = 1, sd = 1)
# Plot
plot(x, y)
set.seed(2024)
# Sample Creation
x <- rnorm(n = 300, mean = 3, sd = 2)
y <- 2*x + rnorm(n = 300, mean = 1, sd = 2)
# Plot
plot(x, y)
set.seed(2024)
# Sample Creation
x <- rnorm(n = 300, mean = 3, sd = 2)
y <- 2*x + rnorm(n = 300, mean = 1, sd = 3)
# Plot
plot(x, y)
regress(y, x)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
setwd("~/Code/Portfolio/Portfolio/Andre's Portfolio/Pages/SimpleRegression")
rm(list = ls())
# To hide output, include 'results = "hide"'
set.seed(2024)
# Sample Creation
x <- rnorm(n = 300, mean = 3, sd = 2)
y <- 2*x + rnorm(n = 300, mean = 1, sd = 3)
# Plot
plot(x, y) # To check if the relation between the two variables appears normal
regress <- function(y, x, truebeta = 0, alpha = 0.05) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Calculate error term
error <- rep(0, n)
for (i in 1:n){
error[i] <- dataset[i, 1] - intercept -  slope * dataset[i, 2]
}
# SE of Slope
var.slope <- sum(error^2) / ((n - 2) * Variance)
se.slope <- sqrt(var.slope)
# T(X) of Slope
T.slope <- (slope - truebeta) / se.slope
# P-value of T(X)
p.slope <- pt(T.slope, df = n - 1, lower.tail = FALSE)
# Confidence Interval for slope
p <- alpha / 2
level <- 1 - alpha
# Bounds
Lower <- slope - qt(p, n - 1, lower.tail = FALSE) * se.slope
Upper <- slope + qt(p, n - 1, lower.tail = FALSE) * se.slope
# Print Output to console
cat("Regression: \n")
cat("Method: Ordinary Least Squares \n")
cat("___________________________________ \n")
cat("          ", "Estimate ", "Std Error", "\n")
cat("Intercept:", intercept, "\n")
cat("    Slope:", slope,      se.slope, "\n")
cat("\n")
cat("Hypothesis Testing: \n")
cat("----------------------------------- \n")
cat("Null: the slope is less or equal to", truebeta, "\n")
cat("Alt: the slope is greater than", truebeta, "\n")
cat("\n")
cat("          ", "T value",    "P-value", "\n")
cat("    Slope:",  T.slope,      p.slope,  "\n")
cat("\n")
cat("Confidence Interval (Two-Sided): \n")
cat("----------------------------------- \n")
cat("The", level, "% two-sided CI for the slope is:", "\n",  "[",Lower, ";", Upper,"] \n")
}
regress(y, x)
# Test and compare output with lm()
test <- lm(y~x)
summary(test)
test$coefficients[2]
test$coefficients
