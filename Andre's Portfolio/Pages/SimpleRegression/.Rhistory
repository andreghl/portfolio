tenyear[i] <- mean(subset[, 2])
}
return(tenyear)
}
DeBilt_avg <- tenyearavg(DeBilt)
a <- list(DeBilt)
a
# Calculate the ten year averages
tenyearavg <- function(data) {
# Define Time variable
time <- 1:length(data)
tenyear <- length(time)
for(i in 1:tenyear) {
start <- time[i]
end <- start + 9
subset <- data[data[, 1] >= start & data[, 1] <= end, ]
tenyear[i] <- mean(subset[, 2])
}
return(tenyear)
}
# Calculate the ten year averages
tenyearavg <- function(data) {
# Define Time variable
time <- 1:length(data)
tenyear <- length(time)
for(i in 1:tenyear) {
start <- time[i]
end <- start + 9
subset <- data[data[, 1] >= start & data[, 1] <= end, ]
tenyear[i] <- mean(subset[, 1])
}
return(tenyear)
}
DeBilt_avg <- tenyearavg(DeBilt)
# Calculate the ten year averages
tenyearavg <- function(data) {
# Define Time variable
time <- 1:length(data)
tenyear <- length(time)
for(i in 1:tenyear) {
start <- time[i]
end <- start + 9
subset <- data[data >= start & data <= end, ]
tenyear[i] <- mean(subset[, 1])
}
return(tenyear)
}
DeBilt_avg <- tenyearavg(DeBilt)
# Calculate the ten year averages
tenyearavg <- function(data) {
# Define Time variable
time <- 1:length(data)
tenyear <- length(time)
for(i in 1:tenyear) {
start <- time[i]
end <- start + 9
subset <- data[start]:data[end]
tenyear[i] <- mean(subset)
}
return(tenyear)
}
DeBilt_avg <- tenyearavg(DeBilt)
# Calculate the ten year averages
tenyearavg <- function(data) {
# Define Time variable
time <- 1:length(data)
tenyear <- length(time)
for(i in 1:tenyear) {
start <- time[i]
end <- start + 9
subset <- data[i]:data[i+9]
tenyear[i] <- mean(subset)
}
return(tenyear)
}
DeBilt_avg <- tenyearavg(DeBilt)
# Calculate the ten year averages
tenyearavg <- function(data) {
# Define Time variable
time <- 1:length(data)
tenyear <- length(time)
for(i in 1:tenyear) {
start <- data[i]
end <- start + 9
subset <- start:end
tenyear[i] <- mean(subset)
}
return(tenyear)
}
DeBilt_avg <- tenyearavg(DeBilt)
print
DeBilt_avg
# Calculate the ten year averages
tenyearavg <- function(data) {
# Define Time variable
time <- 1:length(data)
tenyear <- length(time)
for(i in 1:tenyear) {
start <- data[i]
end <- start + data[i+9]
subset <- start:end
tenyear[i] <- mean(subset)
}
return(tenyear)
}
DeBilt_avg <- tenyearavg(DeBilt)
# Calculate the ten year averages
tenyearavg <- function(data) {
# Define Time variable
time <- 1:length(data)
tenyear <- length(time)
for(i in 1:tenyear) {
for(j in 10:tenyear)
start <- data[i]
end <- start + data[j]
subset <- start:end
tenyear[i] <- mean(subset)
}
return(tenyear)
}
DeBilt_avg <- tenyearavg(DeBilt)
print
# Calculate the ten year averages
tenyearavg <- function(data) {
# Define Time variable
time <- 1:length(data)
tenyear <- length(time)
for(i in 1:tenyear) {
for(j in 10:tenyear)
start <- data[i]
end <- start + data[j]
subset <- start:end
tenyear[i] <- mean(subset)
}
return(tenyear)
}
DeBilt_avg <- tenyearavg(DeBilt)
DeBilt_avg
# Calculate the ten year averages
tenyear <- function(data) {
# Define Time variable
n <- length(data)
time <- 1:n
tenyears <- length(time)
for(i in 1:tenyears) {
start <- data[i]
end <- start + data[j]
subset <- data[data >= start & data <= end]
tenyear[i] <- mean(subset)
}
return(tenyear)
}
DeBilt_avg <- tenyear(DeBilt)
# Calculate the ten year averages
tenyear <- function(data) {
# Define Time variable
n <- length(data)
time <- 1:n
tenyears <- length(time)
for(i in 1:tenyears) {
start <- data[i]
end <- start + 9
subset <- data[data >= start & data <= end]
tenyear[i] <- mean(subset)
}
return(tenyear)
}
DeBilt_avg <- tenyear(DeBilt)
# Calculate the ten year averages
tenyear <- function(data) {
# Define Time variable
n <- length(data)
time <- 1:n
tenyears <- length(time)
for(i in 1:tenyears) {
start <- data[i]
end <- start + 9
subset <- data[data >= start & data <= end]
tenyear[i] <- mean(subset)
}
return(tenyear)
}
DeBilt_avg <- tenyear(DeBilt)
Debilt[1]
Debilt[,1]
DeBilt
DeBilt[2]
Debilt[15]
DeBilt[1]
# Calculate the ten year averages
tenyear <- function(data) {
# Define Time variable
n <- length(data)
time <- 1:n
tenyears <- length(time)
for(i in 1:tenyears) {
j <- i + 9
start <- data[i]
end <- data[j]
subset <- data[data >= start & data <= end]
tenyear[i] <- mean(subset)
}
return(tenyear)
}
DeBilt_avg <- tenyear(DeBilt)
# Calculate the ten year averages
tenyear <- function(data) {
# Define Time variable
n <- length(data)
time <- 1:n
tenyears <- length(time)
for(i in 1:tenyears) {
j <- i + 9
start <- data[i]
end <- data[j]
subset <- data[data >= start & data <= end]
tenyear <- mean(subset)
}
return(tenyear)
}
DeBilt_avg <- tenyear(DeBilt)
DeBilt_avg
# Calculate the ten year averages
tenyear <- function(data) {
# Define Time variable
n <- length(data)
time <- 1:n
tenyears <- length(time)
for(i in 1:tenyears) {
j <- i + 9
start <- data[i]
end <- data[j]
subset <- data[data >= start & data <= end]
averages[i] <- mean(subset)
}
return(averages)
}
DeBilt_avg <- tenyear(DeBilt)
# Calculate the ten year averages
tenyear <- function(data) {
# Define Time variable
n <- length(data)
time <- 1:n
tenyears <- length(time)
for(i in 1:tenyears) {
j <- i + 9
start <- data[i]
end <- data[j]
subset <- data[data >= start & data <= end]
averages <- mean(subset)
}
return(averages)
}
DeBilt_avg <- tenyear(DeBilt)
DeBilt_avg
# Calculate the ten year averages
tenyear <- function(data) {
# Define Time variable
n <- length(data)
averages <- rep(0, n)
for(i in 1:n) {
j <- i + 9
start <- data[i]
end <- data[j]
subset <- start:end
averages[i] <- mean(subset)
}
return(averages)
}
DeBilt_avg <- tenyear(DeBilt)
# Calculate the ten year averages
tenyear <- function(data) {
# Define Time variable
n <- length(data)
averages <- rep(0, n)
for(i in 1:n) {
j <- i + 9
start <- data[i]
end <- data[j]
subset <- data[i]:data[j]
averages[i] <- mean(subset)
}
return(averages)
}
DeBilt_avg <- tenyear(DeBilt)
# Calculate the ten year averages
tenyear <- function(data) {
# Define Time variable
n <- length(data)
averages <- rep(0, n)
for(i in 1:n) {
# Defining the Upper Bound of the sub-sample
j <- i + 9
subset <- data[i]:data[j]
averages[i] <- mean(subset)
}
return(averages)
}
DeBilt_avg <- tenyear(DeBilt)
# Calculate the ten year averages
tenyear <- function(data) {
# Define Time variable
n <- length(data)
averages <- rep(0, n)
for(i in 1:n) {
# Defining the Upper Bound of the sub-sample
j <- i + 9
subset <- data[i:(i+9)]
averages[i] <- mean(subset)
}
return(averages)
}
DeBilt_avg <- tenyear(DeBilt)
DeBilt_avg
subset
subset <- DeBilt[i:(i+9)]
for (i in 10) {
subset <- DeBilt[i:(i+9)]
print(subset)
}
print(DeBilt)
for (i in 10) {
subset <- DeBilt[(i-9):i]
print(subset)
}
for (i in 20) {
subset <- DeBilt[(i-9):i]
print(subset)
}
for (i in 1:20) {
subset <- DeBilt[(i-9):i]
print(subset)
}
for (i in 1:20) {
subset <- DeBilt[i:(i+9)]
print(subset)
}
for (i in 1:2) {
subset <- DeBilt[i:(i+9)]
print(subset)
}
for (i in 1) {
subset <- DeBilt[i:(i+9)]
print(subset)
}
for (i in 2) {
subset <- DeBilt[i:(i+9)]
print(subset)
}
# Calculate the ten year averages
tenyear <- function(data) {
# Define Time variable
n <- length(data)
averages <- rep(0, n)
for(i in 1:n) {
# Defining sub-sample size
subset <- data[i:(i+9)]
averages[i] <- mean(subset)
}
return(averages)
}
DeBilt_avg <- tenyear(DeBilt)
DeBilt_avg
for (i in 2) {
subset <- DeBilt[i:(i+9)]
print(subset)
}
# Calculate the ten year averages
tenyear <- function(data) {
# Define Time variable
n <- length(data)
averages <- rep(0, n)
for(i in 1) {
# Defining sub-sample size
subset <- data[i:(i+9)]
averages[i] <- mean(subset)
}
return(averages)
}
DeBilt_avg <- tenyear(DeBilt)
DeBilt_avg
for (i in 2) {
subset <- DeBilt[i:(i+9)]
print(subset)
}
rm(list = ls())
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
# To hide output, include 'results = "hide"'
# Load data
data <- read.csv("AnnualTEmp.csv",
header = TRUE,
sep = ";",
dec = ",")
attach(data)
# Import libraries
library(tseries)
# Define Variables
Time <- ts(data[,1], start = 1907, frequency = 1)
DeBilt <- ts(data[,2], start = 1907, frequency = 1)
Eelde <- ts(data[,3], start = 1907, frequency = 1)
Maastricht <- ts(data[,4], start = 1907, frequency = 1)
# Plot
ts.plot(DeBilt, Eelde, Maastricht, col = c("blue", "red", "grey"))
title(main = "Annual Dutch Temperatures")
legend("topleft", legend = c("DeBilt", "Eelde", "Maastricht"), col = c("blue", "red", "grey"), lty = c(1,1,1))
print(DeBilt)
# Calculate the ten year averages
tenyear <- function(data) {
# Define Time variable
n <- length(data)
averages <- rep(0, n)
for(i in 1:n) {
# Defining sub-sample size
subset <- data[i:(i+9)]
averages[i] <- mean(subset)
}
return(averages)
}
DeBilt10 <- tenyear(DeBilt)
DeBilt_avg
# Calculate the ten year averages
tenyear <- function(data) {
# Define Time variable
n <- length(data)
averages <- rep(0, n)
for(i in 1:n) {
# Defining sub-sample size
subset <- data[i:(i+9)]
averages[i] <- mean(subset)
}
return(averages)
}
DeBilt10 <- tenyear(DeBilt)
DeBilt10
# Calculate the ten year averages
tenyear <- function(data) {
# Define Time variable
n <- length(data)
averages <- rep(0, n)
for(i in 1:n) {
# Defining sub-sample size
subset <- data[i:(i+9)]
averages[i] <- mean(subset)
}
return(averages)
}
DeBilt10 <- tenyear(DeBilt)
DeBilt10
Eelde10 <- tenyear(Eelde)
Eelde10
Maastricht10 <- tenyear(Maastricht)
Maastricht10
# Calculate the ten year averages
tenyear <- function(data) {
# Define Time variable
n <- length(data)
averages <- rep(0, n)
for(i in 1:n) {
# Defining sub-sample size
subset <- data[i:(i+9)]
averages[i] <- mean(subset)
}
return(averages)
}
# Ten Year Average for DeBilt
DeBilt10 <- tenyear(DeBilt)
DeBilt10
plot(DeBilt10)
ts.plot(DeBilt10)
# Plot
ts.plot(DeBilt10, Eelde10, Maastricht10, col = c("blue", "red", "grey"))
# Ten Year Average for DeBilt
DeBilt10 <- tenyear(DeBilt)
DeBilt10 <- ts(DeBilt10, start = 1907, frequency = 1)
# Ten Year Average for Eelde
Eelde10 <- tenyear(Eelde)
Eelde10 <- ts(Eelde10, start = 1907, frequency = 1)
# Ten Year Average for Maastricht
Maastricht10 <- tenyear(Maastricht)
Maastricht10 <- ts(Maastricht10, start = 1907, frequency = 1)
# Plot
ts.plot(DeBilt10, Eelde10, Maastricht10, col = c("blue", "red", "grey"))
title(main = "Annual Dutch Temperatures", sub = "Ten year averages")
legend("topleft", legend = c("DeBilt", "Eelde", "Maastricht"), col = c("blue", "red", "grey"), lty = c(1,1,1))
rm(list=ls())
tinytex::reinstall_tinytex(repository = "illinois")
Y
install.packages("tinytex")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
# To hide output, include 'results = "hide"'
set.seed(2024)
# Sample Creation
y <- sample(1:20, 30, replace = TRUE)
x <- sample(1:20, 30, replace = TRUE)
set.seed(2024)
# Sample Creation
y <- sample(1:20, 30, replace = TRUE)
x <- sample(1:20, 30, replace = TRUE)
# Sample Creation
y <- sample(1:20, 30, replace = TRUE)
x <- sample(1:20, 30, replace = TRUE)
# Sample Creation
y <- sample(1:20, 30, replace = TRUE)
x <- sample(1:20, 30, replace = TRUE)
# Sample Creation
y <- sample(1:20, 30, replace = TRUE)
x <- sample(1:20, 30, replace = TRUE)
set.seed(2024)
# Sample Creation
y <- sample(1:20, 30, replace = TRUE)
x <- sample(1:20, 30, replace = TRUE)
setwd("~/Code/Portfolio/Portfolio/Andre's Portfolio/Pages")
