# Matrix organizing output
data <- c(intercept, slope)
results <- matrix(data = data ,
nrow = 2,
ncol = 2,
byrow = TRUE,
dimnames = list(Output, c("     ", "Estimate")),
rownames("", "Intercept", "Slope")
)
# Print Output to console
cat("Regression: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
data <- c(intercept, slope)
results <- matrix(data = data ,
nrow = 2,
ncol = 2,
byrow = TRUE,
dimnames = list(Output, c("     ", "Estimate")),
)
# Print Output to console
cat("Regression: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
data <- c(intercept, slope)
results <- matrix(data = data ,
nrow = 2,
ncol = 2,
byrow = TRUE,
dimnames = list("     ", "Estimate")
)
# Print Output to console
cat("Regression: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
ncol(results)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
data <- c(intercept, slope)
results <- matrix(data = data ,
nrow = 2,
ncol = 2,
byrow = TRUE,
colnames = list("     ", "Estimate")
)
# Print Output to console
cat("Regression: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
data <- c(intercept, slope)
results <- matrix(data = data ,
nrow = 2,
ncol = 2,
byrow = TRUE,
colnames = list("Estimate")
)
# Print Output to console
cat("Regression: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
data <- c(intercept, slope)
results <- matrix(data = data ,
nrow = 2,
ncol = 2,
byrow = TRUE,
colnames = "Estimate"
)
# Print Output to console
cat("Regression: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
data <- c(intercept, slope)
results <- matrix(data = data ,
nrow = 2,
ncol = 2,
byrow = TRUE
)
# Print Output to console
cat("Regression: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
# Test and compare output with lm()
test <- lm(y~x)
summary(test)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
data <- c(intercept, slope)
results <- matrix(data = data,
nrow = 2,
ncol = 1,
byrow = TRUE
)
# Print Output to console
cat("Regression: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
# Test and compare output with lm()
test <- lm(y~x)
summary(test)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
output <- c("Intercept", name(dataset[2]))
estimates <- c(intercept, slope)
results <- data.frame(output, estimates)
# Print Output to console
cat("Regression: \n")
cat("Method: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
name <- name(dataset[,2])
output <- c("Intercept", name)
estimates <- c(intercept, slope)
results <- data.frame(output, estimates)
# Print Output to console
cat("Regression: \n")
cat("Method: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
output <- c("Intercept", "Slope")
estimates <- c(intercept, slope)
results <- data.frame(output, estimates)
# Print Output to console
cat("Regression: \n")
cat("Method: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
output <- c("Intercept", "Slope")
estimates <- c(intercept, slope)
results <- c(output, estimates)
# Print Output to console
cat("Regression: \n")
cat("Method: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
# Test and compare output with lm()
test <- lm(y~x)
summary(test)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
output <- c("Intercept", "Slope")
estimates <- c(intercept, slope)
results <- c(output, "\n", estimates)
# Print Output to console
cat("Regression: \n")
cat("Method: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
# Test and compare output with lm()
test <- lm(y~x)
summary(test)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
output <- c("Intercept", "Slope")
estimates <- c(intercept, slope)
results <- data.frame(output, "\n", estimates)
# Print Output to console
cat("Regression: \n")
cat("Method: Ordinary Least Squares \n")
cat("----------------------------------- \n")
write.table(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
# Test and compare output with lm()
test <- lm(y~x)
summary(test)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Matrix organizing output
output <- c("Intercept", "Slope")
estimates <- c(intercept, slope)
results <- data.frame(output, estimates)
# Print Output to console
cat("Regression: \n")
cat("Method: Ordinary Least Squares \n")
cat("----------------------------------- \n")
write.table(results)
# cat("         ", "Estimate",  "\n")
# cat("Intercept:", intercept, "\n")
# cat("Slope:", slope, "\n")
}
regress(y, x)
# Test and compare output with lm()
test <- lm(y~x)
summary(test)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Print Output to console
cat("Regression: \n")
cat("Method: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat("         ", "Estimate",  "\n")
cat("Intercept:", intercept, "\n")
cat("Slope:", slope, "\n")
}
regress(y, x)
# Test and compare output with lm()
test <- lm(y~x)
summary(test)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Print Output to console
cat("Regression: \n")
cat("Method: Ordinary Least Squares \n")
cat("----------------------------------- \n")
cat("          ", "Estimate",  "\n")
cat("Intercept:", intercept, "\n")
cat("    Slope:", slope, "\n")
cat("___________________________________ \n")
}
regress(y, x)
# Test and compare output with lm()
test <- lm(y~x)
summary(test)
regress <- function(y, x) {
dataset <- data.frame(y, x)
# Sample Size
n <- nrow(dataset)
# Find mean of data
meanX <- mean(dataset[,2])
meanY <- mean(dataset[,1])
# Calculating Beta
Covariance <- sum((x - meanX) * (y - meanY))
Variance <- sum((x - meanX) ^ 2)
# Calculating Estimators
slope <- Covariance / Variance
intercept <- meanY - slope * meanX
# Print Output to console
cat("Regression: \n")
cat("Method: Ordinary Least Squares \n")
cat("___________________________________ \n")
cat("          ", "Estimate",  "\n")
cat("Intercept:", intercept, "\n")
cat("    Slope:", slope, "\n")
cat("----------------------------------- \n")
}
regress(y, x)
# Test and compare output with lm()
test <- lm(y~x)
summary(test)
